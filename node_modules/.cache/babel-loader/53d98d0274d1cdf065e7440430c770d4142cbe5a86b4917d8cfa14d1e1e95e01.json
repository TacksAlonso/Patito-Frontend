{"ast":null,"code":"// src/features/orders/ordersSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport api from '../../apiCalls/apiHook';\nimport { selectToken } from '../../features/auth/authSlice'; // Selector para obtener el token\n\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.list.findIndex(order => order.id === action.payload.id);\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  updateOrder\n} = ordersSlice.actions;\nconst addAuthToken = (config = {}, token) => {\n  if (token) {\n    config.headers = {\n      ...config.headers,\n      'Authorization': `Bearer ${token}`\n    };\n  }\n  return config;\n};\nconst refreshOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch(fetchOrders()); // Vuelve a obtener la lista de pedidos\n  } catch (err) {\n    console.error(\"Error refreshing orders:\", err);\n  }\n};\nexport const fetchOrders = () => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    const config = addAuthToken({}, token);\n    const response = await api.get('/orders', config);\n    dispatch(setOrders(response.data));\n  } catch (err) {\n    console.error(\"Error fetching orders:\", err);\n  }\n};\nexport const confirmOrder = orderId => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    const config = addAuthToken({}, token);\n    const response = await api.put(`/orders?id=${orderId}&state=E-E`, {}, config);\n    if (response.status === 200) {\n      dispatch(updateOrder(response.data));\n      dispatch(refreshOrders()); // Refresca la lista de pedidos\n    } else {\n      console.error(\"Error confirming order:\", response.status);\n    }\n  } catch (err) {\n    if (err.response) {\n      switch (err.response.status) {\n        case 404:\n          console.error(\"Order not found:\", err.response.data);\n          break;\n        case 409:\n          console.error(\"Conflict updating order:\", err.response.data);\n          break;\n        default:\n          console.error(\"Error confirming order:\", err.message);\n          break;\n      }\n    } else {\n      console.error(\"Error confirming order:\", err.message);\n    }\n  }\n};\nexport const cancelOrder = orderId => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    const config = addAuthToken({}, token);\n    const response = await api.put(`/orders?id=${orderId}&state=E-C`, {}, config);\n    if (response.status === 200) {\n      dispatch(updateOrder(response.data));\n      dispatch(refreshOrders()); // Refresca la lista de pedidos\n    } else {\n      console.error(\"Error canceling order:\", response.status);\n    }\n  } catch (err) {\n    if (err.response) {\n      switch (err.response.status) {\n        case 404:\n          console.error(\"Order not found:\", err.response.data);\n          break;\n        case 409:\n          console.error(\"Conflict updating order:\", err.response.data);\n          break;\n        default:\n          console.error(\"Error canceling order:\", err.message);\n          break;\n      }\n    } else {\n      console.error(\"Error canceling order:\", err.message);\n    }\n  }\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","api","selectToken","ordersSlice","name","initialState","list","status","reducers","setOrders","state","action","payload","addOrder","push","updateOrder","index","findIndex","order","id","actions","addAuthToken","config","token","headers","refreshOrders","dispatch","getState","fetchOrders","err","console","error","response","get","data","confirmOrder","orderId","put","message","cancelOrder","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["// src/features/orders/ordersSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport api from '../../apiCalls/apiHook';\r\nimport { selectToken } from '../../features/auth/authSlice'; // Selector para obtener el token\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateOrder: (state, action) => {\r\n      const index = state.list.findIndex(order => order.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.list[index] = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, updateOrder } = ordersSlice.actions;\r\n\r\nconst addAuthToken = (config = {}, token) => {\r\n  if (token) {\r\n    config.headers = {\r\n      ...config.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n  }\r\n  return config;\r\n};\r\n\r\nconst refreshOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(fetchOrders()); // Vuelve a obtener la lista de pedidos\r\n  } catch (err) {\r\n    console.error(\"Error refreshing orders:\", err);\r\n  }\r\n};\r\n\r\nexport const fetchOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);   \r\n    const config = addAuthToken({}, token); \r\n    const response = await api.get('/orders', config);\r\n    dispatch(setOrders(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error fetching orders:\", err);\r\n  }\r\n};\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);   \r\n    const config = addAuthToken({}, token); \r\n    const response = await api.put(`/orders?id=${orderId}&state=E-E`, {}, config);\r\n\r\n    if (response.status === 200) {\r\n      dispatch(updateOrder(response.data));\r\n      dispatch(refreshOrders()); // Refresca la lista de pedidos\r\n    } else {\r\n      console.error(\"Error confirming order:\", response.status);\r\n    }\r\n  } catch (err) {\r\n    if (err.response) {\r\n      switch (err.response.status) {\r\n        case 404:\r\n          console.error(\"Order not found:\", err.response.data);\r\n          break;\r\n        case 409:\r\n          console.error(\"Conflict updating order:\", err.response.data);\r\n          break;\r\n        default:\r\n          console.error(\"Error confirming order:\", err.message);\r\n          break;\r\n      }\r\n    } else {\r\n      console.error(\"Error confirming order:\", err.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const config = addAuthToken({}, token);    \r\n    const response = await api.put(`/orders?id=${orderId}&state=E-C`, {}, config);\r\n    if (response.status === 200) {\r\n      dispatch(updateOrder(response.data));\r\n      dispatch(refreshOrders()); // Refresca la lista de pedidos\r\n    } else {\r\n      console.error(\"Error canceling order:\", response.status);\r\n    }\r\n  } catch (err) {\r\n    if (err.response) {\r\n      switch (err.response.status) {\r\n        case 404:\r\n          console.error(\"Order not found:\", err.response.data);\r\n          break;\r\n        case 409:\r\n          console.error(\"Conflict updating order:\", err.response.data);\r\n          break;\r\n        default:\r\n          console.error(\"Error canceling order:\", err.message);\r\n          break;\r\n      }\r\n    } else {\r\n      console.error(\"Error canceling order:\", err.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}