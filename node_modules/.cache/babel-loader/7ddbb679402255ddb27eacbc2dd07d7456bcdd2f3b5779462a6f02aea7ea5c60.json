{"ast":null,"code":"import axios from 'axios';\nconst createApiInstance = baseURL => {\n  const apiInstance = axios.create({\n    baseURL\n  });\n  return apiInstance;\n};\nconst createApiCall = (baseURL, token) => {\n  const apiInstance = axios.create({\n    baseURL\n  });\n  apiInstance.interceptors.request.use(config => {\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n  return apiInstance;\n};\nexport { createApiCall };","map":{"version":3,"names":["axios","createApiInstance","baseURL","apiInstance","create","createApiCall","token","interceptors","request","use","config","headers","Authorization"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/apiCalls/apiCalls.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst createApiInstance = (baseURL) => {\r\n  const apiInstance = axios.create({ baseURL });\r\n  return apiInstance;\r\n};\r\n\r\nconst createApiCall = (baseURL, token) => {\r\n  const apiInstance = axios.create({ baseURL });\r\n\r\n  apiInstance.interceptors.request.use((config) => {\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  return apiInstance;\r\n};\r\n\r\n\r\nexport { createApiCall };\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;EACrC,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAM,CAAC;IAAEF;EAAQ,CAAC,CAAC;EAC7C,OAAOC,WAAW;AACpB,CAAC;AAED,MAAME,aAAa,GAAGA,CAACH,OAAO,EAAEI,KAAK,KAAK;EACxC,MAAMH,WAAW,GAAGH,KAAK,CAACI,MAAM,CAAC;IAAEF;EAAQ,CAAC,CAAC;EAE7CC,WAAW,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IAC/C,IAAIJ,KAAK,EAAE;MACTI,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUN,KAAK,EAAE;IAClD;IACA,OAAOI,MAAM;EACf,CAAC,CAAC;EAEF,OAAOP,WAAW;AACpB,CAAC;AAGD,SAASE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}