{"ast":null,"code":"import axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { selectToken } from '../features/auth/authSlice';\nconst createApiInstance = url => {\n  var _s = $RefreshSig$();\n  const apiInstance = axios.create(url);\n  _s(apiInstance.interceptors.request.use(_s(config => {\n    _s();\n    const token = useSelector(selectToken);\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", false, function () {\n    return [useSelector];\n  })), \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", false, function () {\n    return [useSelector];\n  });\n  return apiInstance;\n};\n\n// Función para obtener el token de localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\nconst apiUserServices = createApiInstance('http://localhost:8181/v1/users');\nconst apiInventary = createApiInstance('http://localhost:8383/v1');\nconst apiOrders = createApiInstance('http://localhost:8484/v1');\nconst apiCustomers = createApiInstance('http://localhost:8282/v1/customers');\nexport { apiUserServices, apiInventary, apiOrders, apiCustomers };","map":{"version":3,"names":["axios","useSelector","selectToken","createApiInstance","url","_s","$RefreshSig$","apiInstance","create","interceptors","request","use","config","token","headers","Authorization","getToken","localStorage","getItem","apiUserServices","apiInventary","apiOrders","apiCustomers"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/apiCalls/apiCalls.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectToken } from '../features/auth/authSlice';\r\n\r\nconst createApiInstance = (url) => {\r\n  const apiInstance = axios.create(url);\r\n\r\n  apiInstance.interceptors.request.use((config) => {\r\n    const token = useSelector(selectToken);\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  return apiInstance;\r\n};\r\n\r\n// Función para obtener el token de localStorage\r\nconst getToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\nconst apiUserServices = createApiInstance('http://localhost:8181/v1/users');\r\nconst apiInventary = createApiInstance('http://localhost:8383/v1');\r\nconst apiOrders = createApiInstance('http://localhost:8484/v1');\r\nconst apiCustomers = createApiInstance('http://localhost:8282/v1/customers');\r\n\r\nexport { apiUserServices, apiInventary, apiOrders, apiCustomers };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,4BAA4B;AAExD,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjC,MAAMC,WAAW,GAAGP,KAAK,CAACQ,MAAM,CAACJ,GAAG,CAAC;EAErCC,EAAA,CAAAE,WAAW,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAAN,EAAA,CAAEO,MAAM,IAAK;IAAAP,EAAA;IAC/C,MAAMQ,KAAK,GAAGZ,WAAW,CAACC,WAAW,CAAC;IACtC,IAAIW,KAAK,EAAE;MACTD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;IAClD;IACA,OAAOD,MAAM;EACf,CAAC;IAAA,QALeX,WAAW;EAAA,EAK1B,CAAC;IAAA,QALcA,WAAW;EAAA;EAO3B,OAAOM,WAAW;AACpB,CAAC;;AAED;AACA,MAAMS,QAAQ,GAAGA,CAAA,KAAM;EACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;AAED,MAAMC,eAAe,GAAGhB,iBAAiB,CAAC,gCAAgC,CAAC;AAC3E,MAAMiB,YAAY,GAAGjB,iBAAiB,CAAC,0BAA0B,CAAC;AAClE,MAAMkB,SAAS,GAAGlB,iBAAiB,CAAC,0BAA0B,CAAC;AAC/D,MAAMmB,YAAY,GAAGnB,iBAAiB,CAAC,oCAAoC,CAAC;AAE5E,SAASgB,eAAe,EAAEC,YAAY,EAAEC,SAAS,EAAEC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}