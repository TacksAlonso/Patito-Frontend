{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport createApiInstance from '../../apiCalls/apiHook';\nimport { selectToken } from '../auth/authSlice';\nimport Swal from 'sweetalert2';\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.list.findIndex(order => order.id === action.payload.id);\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  updateOrder\n} = ordersSlice.actions;\nconst addAuthToken = (config = {}, token) => {\n  if (token) {\n    config.headers = {\n      ...config.headers,\n      'Authorization': `Bearer ${token}`\n    };\n  }\n  return config;\n};\nconst fetchOrders = serviceUrl => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    const api = createApiInstance(serviceUrl);\n    const config = addAuthToken({}, token);\n    const response = await api.get('/orders', config);\n    dispatch(setOrders(response.data));\n  } catch (err) {\n    Swal.fire({\n      title: 'Error',\n      text: 'No se pudieron cargar los pedidos.',\n      icon: 'error',\n      confirmButtonText: 'OK'\n    });\n  }\n};\nexport { fetchOrders };\nexport const confirmOrder = (orderId, serviceUrl) => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    const api = createApiInstance(serviceUrl);\n    const config = addAuthToken({}, token);\n    const response = await api.put(`/orders?id=${orderId}&state=E-E`, {}, config);\n    if (response.status === 200) {\n      dispatch(updateOrder(response.data));\n      dispatch(fetchOrders(serviceUrl));\n      Swal.fire({\n        title: 'Éxito',\n        text: 'Pedido confirmado exitosamente.',\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n    } else {\n      Swal.fire({\n        title: 'Error',\n        text: 'Error al confirmar el pedido.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  } catch (err) {\n    if (err.response) {\n      switch (err.response.status) {\n        case 404:\n          Swal.fire({\n            title: 'Error',\n            text: 'Pedido no encontrado.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          break;\n        case 409:\n          Swal.fire({\n            title: 'Error',\n            text: 'Conflicto al actualizar el pedido.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          break;\n        default:\n          Swal.fire({\n            title: 'Error',\n            text: 'Error al confirmar el pedido.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          break;\n      }\n    } else {\n      Swal.fire({\n        title: 'Error',\n        text: 'Error al confirmar el pedido.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  }\n};\nexport const cancelOrder = (orderId, serviceUrl) => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    const api = createApiInstance(serviceUrl);\n    const config = addAuthToken({}, token);\n    const response = await api.put(`/orders?id=${orderId}&state=E-C`, {}, config);\n    if (response.status === 200) {\n      dispatch(updateOrder(response.data));\n      dispatch(fetchOrders(serviceUrl)); // Refresca la lista de pedidos\n      Swal.fire({\n        title: 'Éxito',\n        text: 'Pedido cancelado exitosamente.',\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n    } else {\n      Swal.fire({\n        title: 'Error',\n        text: 'Error al cancelar el pedido.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  } catch (err) {\n    if (err.response) {\n      switch (err.response.status) {\n        case 404:\n          Swal.fire({\n            title: 'Error',\n            text: 'Pedido no encontrado.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          break;\n        case 409:\n          Swal.fire({\n            title: 'Error',\n            text: 'Conflicto al actualizar el pedido.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          break;\n        default:\n          Swal.fire({\n            title: 'Error',\n            text: 'Error al cancelar el pedido.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          break;\n      }\n    } else {\n      Swal.fire({\n        title: 'Error',\n        text: 'Error al cancelar el pedido.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  }\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","createApiInstance","selectToken","Swal","ordersSlice","name","initialState","list","status","reducers","setOrders","state","action","payload","addOrder","push","updateOrder","index","findIndex","order","id","actions","addAuthToken","config","token","headers","fetchOrders","serviceUrl","dispatch","getState","api","response","get","data","err","fire","title","text","icon","confirmButtonText","confirmOrder","orderId","put","cancelOrder","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport createApiInstance from '../../apiCalls/apiHook';\r\nimport { selectToken } from '../auth/authSlice';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateOrder: (state, action) => {\r\n      const index = state.list.findIndex(order => order.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.list[index] = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, updateOrder } = ordersSlice.actions;\r\n\r\nconst addAuthToken = (config = {}, token) => {\r\n  if (token) {\r\n    config.headers = {\r\n      ...config.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n  }\r\n  return config;\r\n};\r\n\r\nconst fetchOrders = (serviceUrl) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const api = createApiInstance(serviceUrl);\r\n    const config = addAuthToken({}, token);\r\n    const response = await api.get('/orders', config);\r\n    dispatch(setOrders(response.data));\r\n  } catch (err) {\r\n    Swal.fire({\r\n      title: 'Error',\r\n      text: 'No se pudieron cargar los pedidos.',\r\n      icon: 'error',\r\n      confirmButtonText: 'OK'\r\n    });\r\n  }\r\n};\r\n\r\nexport { fetchOrders };\r\n\r\nexport const confirmOrder = (orderId, serviceUrl) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const api = createApiInstance(serviceUrl);\r\n    const config = addAuthToken({}, token);\r\n    const response = await api.put(`/orders?id=${orderId}&state=E-E`, {}, config);\r\n\r\n    if (response.status === 200) {\r\n      dispatch(updateOrder(response.data));\r\n      dispatch(fetchOrders(serviceUrl));\r\n      Swal.fire({\r\n        title: 'Éxito',\r\n        text: 'Pedido confirmado exitosamente.',\r\n        icon: 'success',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Error al confirmar el pedido.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    }\r\n  } catch (err) {\r\n    if (err.response) {\r\n      switch (err.response.status) {\r\n        case 404:\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Pedido no encontrado.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          break;\r\n        case 409:\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Conflicto al actualizar el pedido.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          break;\r\n        default:\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error al confirmar el pedido.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          break;\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Error al confirmar el pedido.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId, serviceUrl) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const api = createApiInstance(serviceUrl);\r\n    const config = addAuthToken({}, token);\r\n    const response = await api.put(`/orders?id=${orderId}&state=E-C`, {}, config);\r\n    if (response.status === 200) {\r\n      dispatch(updateOrder(response.data));\r\n      dispatch(fetchOrders(serviceUrl)); // Refresca la lista de pedidos\r\n      Swal.fire({\r\n        title: 'Éxito',\r\n        text: 'Pedido cancelado exitosamente.',\r\n        icon: 'success',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Error al cancelar el pedido.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    }\r\n  } catch (err) {\r\n    if (err.response) {\r\n      switch (err.response.status) {\r\n        case 404:\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Pedido no encontrado.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          break;\r\n        case 409:\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Conflicto al actualizar el pedido.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          break;\r\n        default:\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error al cancelar el pedido.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          break;\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Error al cancelar el pedido.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}