{"ast":null,"code":"// src/features/orders/ordersSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport { useApiConstructor } from \"../../apiCalls/apiConstructor\";\nimport { Orders } from \"../../cons/urls\";\nimport { selectToken } from '../auth/authSlice'; // Selector para obtener el token\nimport { useSelector } from 'react-redux';\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.list.findIndex(order => order.id === action.payload.id);\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  updateOrder\n} = ordersSlice.actions;\nexport const fetchOrders = () => {\n  var _s = $RefreshSig$();\n  return _s(async dispatch => {\n    _s();\n    const apiCall = useApiConstructor(Orders);\n    try {\n      const response = await apiCall.get('/');\n      dispatch(setOrders(response.data));\n    } catch (err) {\n      console.error(\"Error fetching orders:\", err);\n    }\n  }, \"elT15ejNZeziRlAFh5RyU8fceMU=\", false, function () {\n    return [useApiConstructor];\n  });\n};\nexport const confirmOrder = orderId => {\n  var _s2 = $RefreshSig$();\n  return _s2(async dispatch => {\n    _s2();\n    const apiCall = useApiConstructor(Orders);\n    try {\n      const response = await apiCall.patch(`/orders/${orderId}/confirm`);\n      dispatch(updateOrder(response.data));\n    } catch (err) {\n      console.error(\"Error confirming order:\", err);\n    }\n  }, \"elT15ejNZeziRlAFh5RyU8fceMU=\", false, function () {\n    return [useApiConstructor];\n  });\n};\nexport const cancelOrder = orderId => {\n  var _s3 = $RefreshSig$();\n  return _s3(async dispatch => {\n    _s3();\n    const apiCall = useApiConstructor(Orders);\n    try {\n      const response = await apiCall.patch(`/orders/${orderId}/cancel`);\n      dispatch(updateOrder(response.data));\n    } catch (err) {\n      console.error(\"Error canceling order:\", err);\n    }\n  }, \"elT15ejNZeziRlAFh5RyU8fceMU=\", false, function () {\n    return [useApiConstructor];\n  });\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","useApiConstructor","Orders","selectToken","useSelector","ordersSlice","name","initialState","list","status","reducers","setOrders","state","action","payload","addOrder","push","updateOrder","index","findIndex","order","id","actions","fetchOrders","_s","$RefreshSig$","dispatch","apiCall","response","get","data","err","console","error","confirmOrder","orderId","_s2","patch","cancelOrder","_s3","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["// src/features/orders/ordersSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { useApiConstructor } from \"../../apiCalls/apiConstructor\";\r\nimport { Orders } from \"../../cons/urls\";\r\nimport { selectToken } from '../auth/authSlice'; // Selector para obtener el token\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateOrder: (state, action) => {\r\n      const index = state.list.findIndex(order => order.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.list[index] = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, updateOrder } = ordersSlice.actions;\r\n\r\nexport const fetchOrders = () => async (dispatch) => {\r\n  const apiCall = useApiConstructor(Orders);\r\n  try {\r\n    const response = await apiCall.get('/');\r\n    dispatch(setOrders(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error fetching orders:\", err);\r\n  }\r\n};\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch) => {\r\n  const apiCall = useApiConstructor(Orders);\r\n  try {\r\n    const response = await apiCall.patch(`/orders/${orderId}/confirm`);\r\n    dispatch(updateOrder(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error confirming order:\", err);\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId) => async (dispatch) => {\r\n  const apiCall = useApiConstructor(Orders);\r\n  try {\r\n    const response = await apiCall.patch(`/orders/${orderId}/cancel`);\r\n    dispatch(updateOrder(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error canceling order:\", err);\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}