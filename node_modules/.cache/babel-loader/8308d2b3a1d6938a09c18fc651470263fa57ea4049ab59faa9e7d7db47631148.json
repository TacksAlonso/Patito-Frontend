{"ast":null,"code":"var _jsxFileName = \"A:\\\\Code repositorio\\\\Java\\\\Patito\\\\front-end\\\\patito-frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../features/auth/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { apiUserServices } from \"../apiCalls/apiCalls\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await apiUserServices.post(`/authenticate?userName=${username}&password=${password}`);\n      dispatch(login(response.data.token));\n      navigate(\"/\");\n    } catch (err) {\n      console.error(\"Error during login:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      floating: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"username\",\n        name: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        for: \"username\",\n        children: \"Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(FormGroup, {\n      floating: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplePassword\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Iniciar sesion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n_s(LoginForm, \"06oGW9bxuaKt7NaizLmrAthAuRU=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useDispatch","login","useNavigate","apiUserServices","Form","FormGroup","Input","Label","Button","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","dispatch","navigate","handleSubmit","e","preventDefault","response","post","data","token","err","console","error","onSubmit","children","floating","id","name","value","onChange","target","placeholder","type","fileName","_jsxFileName","lineNumber","columnNumber","for","_c","$RefreshReg$"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../features/auth/authSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { apiUserServices } from \"../apiCalls/apiCalls\";\r\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await apiUserServices.post(\r\n        `/authenticate?userName=${username}&password=${password}`\r\n      );\r\n\r\n      dispatch(login(response.data.token));\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.error(\"Error during login:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup floating>\r\n          <Input\r\n            id=\"username\"\r\n            name=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Username\"\r\n            type=\"text\"\r\n          />\r\n          <Label for=\"username\">Usuario</Label>\r\n        </FormGroup>{\" \"}\r\n        <FormGroup floating>\r\n          <Input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <Label for=\"examplePassword\">Password</Label>\r\n        </FormGroup>{\" \"}\r\n        <Button>Iniciar sesion</Button>\r\n      </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}