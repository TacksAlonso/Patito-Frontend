{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useEurekaServices = () => {\n  _s();\n  const [services, setServices] = useState({});\n  const eurekaServerUrl = 'http://localhost:8761/eureka/apps'; // Cambia esto según la URL de tu servidor Eureka\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await axios.get(eurekaServerUrl);\n        const serviceData = response.data;\n        const serviceUrls = {};\n\n        // Extrae URLs de los servicios desde la respuesta de Eureka\n        const serviceList = serviceData.application;\n        serviceList.forEach(app => {\n          const serviceName = app.name;\n          const instances = app.instance;\n          if (instances.length > 0) {\n            serviceUrls[serviceName] = `http://${instances[0].hostName}:${instances[0].port.$}`;\n          }\n        });\n        setServices(serviceUrls);\n      } catch (error) {\n        console.error(\"Error fetching services from Eureka:\", error);\n      }\n    };\n    fetchServices();\n  }, []);\n  return services;\n};\n_s(useEurekaServices, \"9g8klvH92nbJGuPXyv/EaioBrm8=\");\nexport default useEurekaServices;","map":{"version":3,"names":["useState","useEffect","axios","useEurekaServices","_s","services","setServices","eurekaServerUrl","fetchServices","response","get","serviceData","data","serviceUrls","serviceList","application","forEach","app","serviceName","name","instances","instance","length","hostName","port","$","error","console"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/hooks/useEurekaServices.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useEurekaServices = () => {\r\n  const [services, setServices] = useState({});\r\n  const eurekaServerUrl = 'http://localhost:8761/eureka/apps'; // Cambia esto según la URL de tu servidor Eureka\r\n\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await axios.get(eurekaServerUrl);\r\n        const serviceData = response.data;\r\n        const serviceUrls = {};\r\n\r\n        // Extrae URLs de los servicios desde la respuesta de Eureka\r\n        const serviceList = serviceData.application;\r\n        serviceList.forEach(app => {\r\n          const serviceName = app.name;\r\n          const instances = app.instance;\r\n          if (instances.length > 0) {\r\n            serviceUrls[serviceName] = `http://${instances[0].hostName}:${instances[0].port.$}`;\r\n          }\r\n        });\r\n\r\n        setServices(serviceUrls);\r\n      } catch (error) {\r\n        console.error(\"Error fetching services from Eureka:\", error);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, []);\r\n\r\n  return services;\r\n};\r\n\r\nexport default useEurekaServices;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAMO,eAAe,GAAG,mCAAmC,CAAC,CAAC;;EAE7DN,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACH,eAAe,CAAC;QACjD,MAAMI,WAAW,GAAGF,QAAQ,CAACG,IAAI;QACjC,MAAMC,WAAW,GAAG,CAAC,CAAC;;QAEtB;QACA,MAAMC,WAAW,GAAGH,WAAW,CAACI,WAAW;QAC3CD,WAAW,CAACE,OAAO,CAACC,GAAG,IAAI;UACzB,MAAMC,WAAW,GAAGD,GAAG,CAACE,IAAI;UAC5B,MAAMC,SAAS,GAAGH,GAAG,CAACI,QAAQ;UAC9B,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;YACxBT,WAAW,CAACK,WAAW,CAAC,GAAG,UAAUE,SAAS,CAAC,CAAC,CAAC,CAACG,QAAQ,IAAIH,SAAS,CAAC,CAAC,CAAC,CAACI,IAAI,CAACC,CAAC,EAAE;UACrF;QACF,CAAC,CAAC;QAEFnB,WAAW,CAACO,WAAW,CAAC;MAC1B,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAEDlB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,QAAQ;AACjB,CAAC;AAACD,EAAA,CA/BID,iBAAiB;AAiCvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}