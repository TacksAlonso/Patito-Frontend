{"ast":null,"code":"// src/features/orders/ordersSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport apiHook from '../../apiCalls/apiHook'; // Importa la instancia configurada de Axios\nimport { Orders } from \"../../cons/urls\";\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.list.findIndex(order => order.id === action.payload.id);\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  updateOrder\n} = ordersSlice.actions;\nexport const fetchOrders = () => async dispatch => {\n  try {\n    const response = await apiHook.get(`${Orders}`); // Usa la instancia de Axios configurada\n    dispatch(setOrders(response.data));\n  } catch (err) {\n    console.error(\"Error fetching orders:\", err);\n  }\n};\nexport const confirmOrder = orderId => async dispatch => {\n  try {\n    const response = await apiHook.patch(`/orders/${orderId}/confirm`);\n    dispatch(updateOrder(response.data));\n  } catch (err) {\n    console.error(\"Error confirming order:\", err);\n  }\n};\nexport const cancelOrder = orderId => async dispatch => {\n  try {\n    const response = await apiHook.patch(`/orders/${orderId}/cancel`);\n    dispatch(updateOrder(response.data));\n  } catch (err) {\n    console.error(\"Error canceling order:\", err);\n  }\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","apiHook","Orders","ordersSlice","name","initialState","list","status","reducers","setOrders","state","action","payload","addOrder","push","updateOrder","index","findIndex","order","id","actions","fetchOrders","dispatch","response","get","data","err","console","error","confirmOrder","orderId","patch","cancelOrder","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["// src/features/orders/ordersSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport apiHook from '../../apiCalls/apiHook'; // Importa la instancia configurada de Axios\r\nimport { Orders } from \"../../cons/urls\";\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateOrder: (state, action) => {\r\n      const index = state.list.findIndex(order => order.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.list[index] = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, updateOrder } = ordersSlice.actions;\r\n\r\nexport const fetchOrders = () => async (dispatch) => {\r\n  try {\r\n    const response = await apiHook.get(`${Orders}`); // Usa la instancia de Axios configurada\r\n    dispatch(setOrders(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error fetching orders:\", err);\r\n  }\r\n};\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch) => {\r\n  try {\r\n    const response = await apiHook.patch(`/orders/${orderId}/confirm`);\r\n    dispatch(updateOrder(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error confirming order:\", err);\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId) => async (dispatch) => {\r\n  try {\r\n    const response = await apiHook.patch(`/orders/${orderId}/cancel`);\r\n    dispatch(updateOrder(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error canceling order:\", err);\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,wBAAwB,CAAC,CAAC;AAC9C,SAASC,MAAM,QAAQ,iBAAiB;AAExC,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;EACrCI,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACJ,IAAI,CAACQ,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACjC,CAAC;IACDG,WAAW,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMK,KAAK,GAAGN,KAAK,CAACJ,IAAI,CAACW,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAACO,EAAE,CAAC;MAC3E,IAAIH,KAAK,IAAI,CAAC,EAAE;QACdN,KAAK,CAACJ,IAAI,CAACU,KAAK,CAAC,GAAGL,MAAM,CAACC,OAAO;MACpC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,SAAS;EAAEI,QAAQ;EAAEE;AAAY,CAAC,GAAGZ,WAAW,CAACiB,OAAO;AAEvE,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,OAAO,CAACuB,GAAG,CAAC,GAAGtB,MAAM,EAAE,CAAC,CAAC,CAAC;IACjDoB,QAAQ,CAACb,SAAS,CAACc,QAAQ,CAACE,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,OAAO,IAAK,MAAOR,QAAQ,IAAK;EAC3D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,OAAO,CAAC8B,KAAK,CAAC,WAAWD,OAAO,UAAU,CAAC;IAClER,QAAQ,CAACP,WAAW,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMM,WAAW,GAAIF,OAAO,IAAK,MAAOR,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,OAAO,CAAC8B,KAAK,CAAC,WAAWD,OAAO,SAAS,CAAC;IACjER,QAAQ,CAACP,WAAW,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;EAC9C;AACF,CAAC;AAED,eAAevB,WAAW,CAAC8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}