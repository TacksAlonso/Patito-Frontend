{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle',\n    // 'idle', 'loading', 'succeeded', 'failed'\n    error: null\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    setLoading: state => {\n      state.status = 'loading';\n    },\n    setError: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    setSuccess: state => {\n      state.status = 'succeeded';\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  setLoading,\n  setError,\n  setSuccess\n} = ordersSlice.actions;\nexport const fetchOrders = () => async dispatch => {\n  dispatch(setLoading());\n  try {\n    const response = await axios.get('/api/orders');\n    dispatch(setOrders(response.data));\n    dispatch(setSuccess());\n  } catch (err) {\n    dispatch(setError(err.message));\n  }\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","axios","ordersSlice","name","initialState","list","status","error","reducers","setOrders","state","action","payload","addOrder","push","setLoading","setError","setSuccess","actions","fetchOrders","dispatch","response","get","data","err","message","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle', // 'idle', 'loading', 'succeeded', 'failed'\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    setLoading: (state) => {\r\n      state.status = 'loading';\r\n    },\r\n    setError: (state, action) => {\r\n      state.status = 'failed';\r\n      state.error = action.payload;\r\n    },\r\n    setSuccess: (state) => {\r\n      state.status = 'succeeded';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, setLoading, setError, setSuccess } = ordersSlice.actions;\r\n\r\nexport const fetchOrders = () => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const response = await axios.get('/api/orders');\r\n    dispatch(setOrders(response.data));\r\n    dispatch(setSuccess());\r\n  } catch (err) {\r\n    dispatch(setError(err.message));\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,IAAI,CAACS,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACjC,CAAC;IACDG,UAAU,EAAGL,KAAK,IAAK;MACrBA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC;IACDU,QAAQ,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDK,UAAU,EAAGP,KAAK,IAAK;MACrBA,KAAK,CAACJ,MAAM,GAAG,WAAW;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,SAAS;EAAEI,QAAQ;EAAEE,UAAU;EAAEC,QAAQ;EAAEC;AAAW,CAAC,GAAGf,WAAW,CAACgB,OAAO;AAE5F,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACnDA,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,aAAa,CAAC;IAC/CF,QAAQ,CAACX,SAAS,CAACY,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClCH,QAAQ,CAACH,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAACJ,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC,CAAC;EACjC;AACF,CAAC;AAED,eAAevB,WAAW,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}