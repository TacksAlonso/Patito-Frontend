{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { EUREKA_SERVER_URL } from '../config/config';\nconst useEurekaServices = () => {\n  _s();\n  const [services, setServices] = useState({});\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await axios.get(EUREKA_SERVER_URL);\n        console.log(\"response\" + response);\n        const applications = response.data.applications.application;\n        const serviceMap = applications.reduce((acc, app) => {\n          const instances = app.instance;\n          console.log(\"instances\" + instances);\n          const serviceUrls = instances.reduce((serviceAcc, instance) => {\n            serviceAcc[app.name] = instance.homePageUrl;\n            return serviceAcc;\n          }, {});\n          console.log(\"serviceUrls\" + serviceUrls);\n          return {\n            ...acc,\n            ...serviceUrls\n          };\n        }, {});\n        setServices(serviceMap);\n      } catch (error) {\n        console.error('Error fetching services from Eureka:', error);\n      }\n    };\n    fetchServices();\n  }, []);\n  return services;\n};\n_s(useEurekaServices, \"9g8klvH92nbJGuPXyv/EaioBrm8=\");\nexport default useEurekaServices;","map":{"version":3,"names":["useState","useEffect","axios","EUREKA_SERVER_URL","useEurekaServices","_s","services","setServices","fetchServices","response","get","console","log","applications","data","application","serviceMap","reduce","acc","app","instances","instance","serviceUrls","serviceAcc","name","homePageUrl","error"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/hooks/useEurekaServices.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { EUREKA_SERVER_URL } from '../config/config';\r\n\r\nconst useEurekaServices = () => {\r\n  const [services, setServices] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await axios.get(EUREKA_SERVER_URL);\r\n        console.log(\"response\"+response);\r\n        const applications = response.data.applications.application;\r\n\r\n        const serviceMap = applications.reduce((acc, app) => {\r\n          const instances = app.instance;\r\n          console.log(\"instances\"+instances)\r\n\r\n          const serviceUrls = instances.reduce((serviceAcc, instance) => {\r\n            serviceAcc[app.name] = instance.homePageUrl;\r\n            return serviceAcc;\r\n          }, {});\r\n          console.log(\"serviceUrls\"+serviceUrls)\r\n          return { ...acc, ...serviceUrls };\r\n        }, {});\r\n\r\n        setServices(serviceMap);\r\n      } catch (error) {\r\n        console.error('Error fetching services from Eureka:', error);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, []);\r\n\r\n  return services;\r\n};\r\n\r\nexport default useEurekaServices;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,kBAAkB;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,iBAAiB,CAAC;QACnDQ,OAAO,CAACC,GAAG,CAAC,UAAU,GAACH,QAAQ,CAAC;QAChC,MAAMI,YAAY,GAAGJ,QAAQ,CAACK,IAAI,CAACD,YAAY,CAACE,WAAW;QAE3D,MAAMC,UAAU,GAAGH,YAAY,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UACnD,MAAMC,SAAS,GAAGD,GAAG,CAACE,QAAQ;UAC9BV,OAAO,CAACC,GAAG,CAAC,WAAW,GAACQ,SAAS,CAAC;UAElC,MAAME,WAAW,GAAGF,SAAS,CAACH,MAAM,CAAC,CAACM,UAAU,EAAEF,QAAQ,KAAK;YAC7DE,UAAU,CAACJ,GAAG,CAACK,IAAI,CAAC,GAAGH,QAAQ,CAACI,WAAW;YAC3C,OAAOF,UAAU;UACnB,CAAC,EAAE,CAAC,CAAC,CAAC;UACNZ,OAAO,CAACC,GAAG,CAAC,aAAa,GAACU,WAAW,CAAC;UACtC,OAAO;YAAE,GAAGJ,GAAG;YAAE,GAAGI;UAAY,CAAC;QACnC,CAAC,EAAE,CAAC,CAAC,CAAC;QAENf,WAAW,CAACS,UAAU,CAAC;MACzB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAEDlB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,QAAQ;AACjB,CAAC;AAACD,EAAA,CAhCID,iBAAiB;AAkCvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}