{"ast":null,"code":"// Asegúrate de incluir la exportación de `fetchOrders`\nimport { createSlice } from '@reduxjs/toolkit';\nimport useApiConstructor from '../../apiCalls/apiHook'; // Asegúrate de que esta importación sea correcta\nimport { selectToken } from '../auth/authSlice';\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.list.findIndex(order => order.id === action.payload.id);\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  updateOrder\n} = ordersSlice.actions;\nconst addAuthToken = (config = {}, token) => {\n  if (token) {\n    config.headers = {\n      ...config.headers,\n      'Authorization': `Bearer ${token}`\n    };\n  }\n  return config;\n};\nconst fetchOrders = () => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, getState) => {\n    _s();\n    try {\n      const state = getState();\n      const token = selectToken(state);\n      const api = useApiConstructor('ORDERS-SERVICES');\n      const config = addAuthToken({}, token);\n      const response = await api.get('/orders', config);\n      dispatch(setOrders(response.data));\n    } catch (err) {\n      console.error(\"Error fetching orders:\", err);\n    }\n  }, \"/j1dWYxIjPswWWPda9QAV2SX95o=\", false, function () {\n    return [useApiConstructor];\n  });\n};\n\n// Exporta fetchOrders\nexport { fetchOrders };\nexport const confirmOrder = orderId => {\n  var _s2 = $RefreshSig$();\n  return _s2(async (dispatch, getState) => {\n    _s2();\n    try {\n      const state = getState();\n      const token = selectToken(state);\n      const api = useApiConstructor('ORDERS-SERVICES');\n      const config = addAuthToken({}, token);\n      const response = await api.put(`/orders?id=${orderId}&state=E-E`, {}, config);\n      if (response.status === 200) {\n        dispatch(updateOrder(response.data));\n        dispatch(fetchOrders()); // Refresca la lista de pedidos\n      } else {\n        console.error(\"Error confirming order:\", response.status);\n      }\n    } catch (err) {\n      if (err.response) {\n        switch (err.response.status) {\n          case 404:\n            console.error(\"Order not found:\", err.response.data);\n            break;\n          case 409:\n            console.error(\"Conflict updating order:\", err.response.data);\n            break;\n          default:\n            console.error(\"Error confirming order:\", err.message);\n            break;\n        }\n      } else {\n        console.error(\"Error confirming order:\", err.message);\n      }\n    }\n  }, \"/j1dWYxIjPswWWPda9QAV2SX95o=\", false, function () {\n    return [useApiConstructor];\n  });\n};\nexport const cancelOrder = orderId => {\n  var _s3 = $RefreshSig$();\n  return _s3(async (dispatch, getState) => {\n    _s3();\n    try {\n      const state = getState();\n      const token = selectToken(state);\n      const api = useApiConstructor('ORDERS-SERVICES');\n      const config = addAuthToken({}, token);\n      const response = await api.put(`/orders?id=${orderId}&state=E-C`, {}, config);\n      if (response.status === 200) {\n        dispatch(updateOrder(response.data));\n        dispatch(fetchOrders()); // Refresca la lista de pedidos\n      } else {\n        console.error(\"Error canceling order:\", response.status);\n      }\n    } catch (err) {\n      if (err.response) {\n        switch (err.response.status) {\n          case 404:\n            console.error(\"Order not found:\", err.response.data);\n            break;\n          case 409:\n            console.error(\"Conflict updating order:\", err.response.data);\n            break;\n          default:\n            console.error(\"Error canceling order:\", err.message);\n            break;\n        }\n      } else {\n        console.error(\"Error canceling order:\", err.message);\n      }\n    }\n  }, \"/j1dWYxIjPswWWPda9QAV2SX95o=\", false, function () {\n    return [useApiConstructor];\n  });\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","useApiConstructor","selectToken","ordersSlice","name","initialState","list","status","reducers","setOrders","state","action","payload","addOrder","push","updateOrder","index","findIndex","order","id","actions","addAuthToken","config","token","headers","fetchOrders","_s","$RefreshSig$","dispatch","getState","api","response","get","data","err","console","error","confirmOrder","orderId","_s2","put","message","cancelOrder","_s3","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["// Asegúrate de incluir la exportación de `fetchOrders`\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport useApiConstructor from '../../apiCalls/apiHook'; // Asegúrate de que esta importación sea correcta\r\nimport { selectToken } from '../auth/authSlice';\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateOrder: (state, action) => {\r\n      const index = state.list.findIndex(order => order.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.list[index] = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, updateOrder } = ordersSlice.actions;\r\n\r\nconst addAuthToken = (config = {}, token) => {\r\n  if (token) {\r\n    config.headers = {\r\n      ...config.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n  }\r\n  return config;\r\n};\r\n\r\nconst fetchOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const api = useApiConstructor('ORDERS-SERVICES');\r\n    const config = addAuthToken({}, token);\r\n    const response = await api.get('/orders', config);\r\n    dispatch(setOrders(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error fetching orders:\", err);\r\n  }\r\n};\r\n\r\n// Exporta fetchOrders\r\nexport { fetchOrders };\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const api = useApiConstructor('ORDERS-SERVICES');\r\n    const config = addAuthToken({}, token);\r\n    const response = await api.put(`/orders?id=${orderId}&state=E-E`, {}, config);\r\n\r\n    if (response.status === 200) {\r\n      dispatch(updateOrder(response.data));\r\n      dispatch(fetchOrders()); // Refresca la lista de pedidos\r\n    } else {\r\n      console.error(\"Error confirming order:\", response.status);\r\n    }\r\n  } catch (err) {\r\n    if (err.response) {\r\n      switch (err.response.status) {\r\n        case 404:\r\n          console.error(\"Order not found:\", err.response.data);\r\n          break;\r\n        case 409:\r\n          console.error(\"Conflict updating order:\", err.response.data);\r\n          break;\r\n        default:\r\n          console.error(\"Error confirming order:\", err.message);\r\n          break;\r\n      }\r\n    } else {\r\n      console.error(\"Error confirming order:\", err.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    const api = useApiConstructor('ORDERS-SERVICES');\r\n    const config = addAuthToken({}, token);\r\n    const response = await api.put(`/orders?id=${orderId}&state=E-C`, {}, config);\r\n    if (response.status === 200) {\r\n      dispatch(updateOrder(response.data));\r\n      dispatch(fetchOrders()); // Refresca la lista de pedidos\r\n    } else {\r\n      console.error(\"Error canceling order:\", response.status);\r\n    }\r\n  } catch (err) {\r\n    if (err.response) {\r\n      switch (err.response.status) {\r\n        case 404:\r\n          console.error(\"Order not found:\", err.response.data);\r\n          break;\r\n        case 409:\r\n          console.error(\"Conflict updating order:\", err.response.data);\r\n          break;\r\n        default:\r\n          console.error(\"Error canceling order:\", err.message);\r\n          break;\r\n      }\r\n    } else {\r\n      console.error(\"Error canceling order:\", err.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}