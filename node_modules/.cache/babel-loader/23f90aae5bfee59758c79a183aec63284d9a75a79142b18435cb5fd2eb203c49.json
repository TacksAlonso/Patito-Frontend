{"ast":null,"code":"// src/features/orders/ordersSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport api from '../../apiCalls/apiHook';\nimport { selectToken } from '../../features/auth/authSlice'; // Selector para obtener el token\n\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {\n    setOrders: (state, action) => {\n      state.list = action.payload;\n    },\n    addOrder: (state, action) => {\n      state.list.push(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.list.findIndex(order => order.id === action.payload.id);\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setOrders,\n  addOrder,\n  updateOrder\n} = ordersSlice.actions;\n\n// Función para agregar el token al encabezado de la solicitud\nconst addAuthToken = (config = {}, token) => {\n  if (token) {\n    config.headers = {\n      ...config.headers,\n      'Authorization': `Bearer ${token}`\n    };\n  }\n  return config;\n};\nexport const fetchOrders = () => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    console.log(\"fetchOrders token:\" + token);\n    const response = await api.get('/orders', {\n      headers: addAuthToken({}, token)\n    });\n    dispatch(setOrders(response.data));\n  } catch (err) {\n    console.error(\"Error fetching orders:\", err);\n  }\n};\nexport const confirmOrder = orderId => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    console.log(\"confirmOrder token:\" + token);\n    const response = await api.patch(`/orders/${orderId}/confirm`, {}, {\n      headers: addAuthToken({}, token)\n    });\n    dispatch(updateOrder(response.data));\n  } catch (err) {\n    console.error(\"Error confirming order:\", err);\n  }\n};\nexport const cancelOrder = orderId => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const token = selectToken(state);\n    console.log(\"cancelOrder token:\" + token);\n    const response = await api.patch(`/orders/${orderId}/cancel`, {}, {\n      headers: addAuthToken({}, token)\n    });\n    dispatch(updateOrder(response.data));\n  } catch (err) {\n    console.error(\"Error canceling order:\", err);\n  }\n};\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","api","selectToken","ordersSlice","name","initialState","list","status","reducers","setOrders","state","action","payload","addOrder","push","updateOrder","index","findIndex","order","id","actions","addAuthToken","config","token","headers","fetchOrders","dispatch","getState","console","log","response","get","data","err","error","confirmOrder","orderId","patch","cancelOrder","reducer"],"sources":["A:/Code repositorio/Java/Patito/front-end/patito-frontend/src/features/orders/ordersSlice.js"],"sourcesContent":["// src/features/orders/ordersSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport api from '../../apiCalls/apiHook';\r\nimport { selectToken } from '../../features/auth/authSlice'; // Selector para obtener el token\r\n\r\nexport const ordersSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    list: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    setOrders: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    addOrder: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateOrder: (state, action) => {\r\n      const index = state.list.findIndex(order => order.id === action.payload.id);\r\n      if (index >= 0) {\r\n        state.list[index] = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrders, addOrder, updateOrder } = ordersSlice.actions;\r\n\r\n// Función para agregar el token al encabezado de la solicitud\r\nconst addAuthToken = (config = {}, token) => {\r\n  if (token) {\r\n    config.headers = {\r\n      ...config.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n  }\r\n  return config;\r\n};\r\n\r\nexport const fetchOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    console.log(\"fetchOrders token:\"+token)\r\n    const response = await api.get('/orders', {\r\n      headers: addAuthToken({}, token),\r\n    });\r\n    dispatch(setOrders(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error fetching orders:\", err);\r\n  }\r\n};\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    console.log(\"confirmOrder token:\"+token)\r\n    const response = await api.patch(`/orders/${orderId}/confirm`, {}, {\r\n      headers: addAuthToken({}, token),\r\n    });\r\n    dispatch(updateOrder(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error confirming order:\", err);\r\n  }\r\n};\r\n\r\nexport const cancelOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const token = selectToken(state);\r\n    console.log(\"cancelOrder token:\"+token)\r\n    const response = await api.patch(`/orders/${orderId}/cancel`, {}, {\r\n      headers: addAuthToken({}, token),\r\n    });\r\n    dispatch(updateOrder(response.data));\r\n  } catch (err) {\r\n    console.error(\"Error canceling order:\", err);\r\n  }\r\n};\r\n\r\nexport default ordersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}